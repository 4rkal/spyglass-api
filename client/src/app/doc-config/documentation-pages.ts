import {
    knownNavItemParent,
    knownAccountsNavItem,
    knownVanitiesNavItem,
    repAliasNavItem,
    repMonitoredNavItem,
    repNavItemParent,
    repOnlineNavItem,
    repRootNavItem,
    repUptimeNavItem,
    distributionNavItemParent,
    supplyNavItem,
    developerFundsNavItem,
    networkNavItemParent,
    prWeightRequirementNavItem,
    accountNavItemParent,
    accountDelegatorsNavItem,
    accountRepresentativeNavItem,
    distributionBuckets,
    richListNavItem,
    peerVersionsNavItem,
    quorumNavItem,
    ncNavItem,
    accountInsightsNavItem,
    burnNavItem,
    richListSnapshotNavItem,
    blockNavItemParent,
    blockNavItem,
    receivableTxNavItem,
    confirmedTxNavItem,
    accountExport,
    accountOverviewNavItem,
    ledgerSizeNavItem,
    repScoresNavItem,
    blocksNavItem,
    priceNavItem, nodeStatsNavItem,
} from '../navigation/nav-items';
import { Knob } from './knobs/Knob';
import { REPRESENTATIVES_UPTIME_KNOBS, ROOT_REPRESENTATIVES_KNOBS } from './knobs/representatives.knobs';
import { KNOWN_ACCOUNTS_KNOBS } from './knobs/known.knobs';
import {
    ACCOUNT_DELEGATORS_KNOB,
    ACCOUNT_REPRESENTATIVE_KNOB,
    ACCOUNT_INSIGHTS_KNOB,
    ACCOUNT_RECEIVABLE_KNOB,
    ACCOUNT_CONFIRMED_KNOB,
    ACCOUNT_EXPORT_KNOBS,
    ACCOUNT_OVERVIEW_KNOBS,
} from './knobs/account.knobs';
import { DISTRIBUTION_RICH_LIST_KNOBS } from './knobs/distribution.knobs';
import { BLOCK_KNOBS } from './knobs/block.knobs';
import { BLOCKS_KNOBS } from './knobs/blocks.knobs';

export const apiDocumentationPages: Array<{
    route: string;
    apiPath: string;
    responseSchema: string;
    knobs: Array<Knob>;
    requestType: 'GET' | 'POST';
}> = [
    {
        route: `${accountNavItemParent.route}/${accountDelegatorsNavItem.route}`,
        apiPath: 'v1/account/delegators',
        responseSchema: 'DelegatorsOverviewDto',
        knobs: ACCOUNT_DELEGATORS_KNOB,
        requestType: 'POST',
    },
    {
        route: `${accountNavItemParent.route}/${accountInsightsNavItem.route}`,
        apiPath: 'v1/account/insights',
        responseSchema: 'InsightsDto',
        knobs: ACCOUNT_INSIGHTS_KNOB,
        requestType: 'POST',
    },
    {
        route: `${accountNavItemParent.route}/${accountRepresentativeNavItem.route}`,
        apiPath: 'v1/account/representative/[address]',
        responseSchema: 'AccountRepresentativeDto',
        knobs: ACCOUNT_REPRESENTATIVE_KNOB,
        requestType: 'GET',
    },
    {
        route: `${accountNavItemParent.route}/${receivableTxNavItem.route}`,
        apiPath: 'v1/account/receivable-transactions',
        responseSchema: 'ReceivableTransactionDto[]',
        knobs: ACCOUNT_RECEIVABLE_KNOB,
        requestType: 'POST',
    },
    {
        route: `${accountNavItemParent.route}/${accountExport.route}`,
        apiPath: 'v1/account/export',
        responseSchema: 'string',
        knobs: ACCOUNT_EXPORT_KNOBS,
        requestType: 'POST',
    },
    {
        route: `${accountNavItemParent.route}/${accountOverviewNavItem.route}`,
        apiPath: 'v1/account/overview/[address]',
        responseSchema: 'AccountOverviewDto',
        knobs: ACCOUNT_OVERVIEW_KNOBS,
        requestType: 'GET',
    },
    {
        route: `${accountNavItemParent.route}/${confirmedTxNavItem.route}`,
        apiPath: 'v1/account/confirmed-transactions',
        responseSchema: 'ConfirmedTransactionDto[]',
        knobs: ACCOUNT_CONFIRMED_KNOB,
        requestType: 'POST',
    },
    {
        route: `${repNavItemParent.route}/${repRootNavItem.route}`,
        apiPath: 'v1/representatives',
        responseSchema: 'RepresentativeDto[]',
        knobs: ROOT_REPRESENTATIVES_KNOBS,
        requestType: 'POST',
    },
    {
        route: `${repNavItemParent.route}/${repAliasNavItem.route}`,
        apiPath: 'v1/representatives/aliases',
        responseSchema: 'AliasedRepresentativeDto[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${repNavItemParent.route}/${repOnlineNavItem.route}`,
        apiPath: 'v1/representatives/online',
        responseSchema: 'string[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${repNavItemParent.route}/${repScoresNavItem.route}`,
        apiPath: 'v1/representatives/scores',
        responseSchema: 'RepScoreDto[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${repNavItemParent.route}/${repUptimeNavItem.route}`,
        apiPath: 'v1/representatives/uptime',
        responseSchema: 'RepresentativeUptimeDto[]',
        knobs: REPRESENTATIVES_UPTIME_KNOBS,
        requestType: 'POST',
    },
    {
        route: `${repNavItemParent.route}/${repMonitoredNavItem.route}`,
        apiPath: 'v1/representatives/monitored',
        responseSchema: 'MonitoredRepresentativeDto[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${repNavItemParent.route}/${prWeightRequirementNavItem.route}`,
        apiPath: 'v1/representatives/pr-weight',
        responseSchema: 'PRWeightRequirementDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${knownNavItemParent.route}/${knownAccountsNavItem.route}`,
        apiPath: 'v1/known/accounts',
        responseSchema: 'KnownAccountDto[]', // TODO: Fix type!
        knobs: KNOWN_ACCOUNTS_KNOBS,
        requestType: 'POST',
    },
    {
        route: `${knownNavItemParent.route}/${knownVanitiesNavItem.route}`,
        apiPath: 'v1/known/vanities',
        responseSchema: 'string[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${distributionNavItemParent.route}/${developerFundsNavItem.route}`,
        apiPath: 'v1/distribution/developer-funds',
        responseSchema: 'DeveloperFundsDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${distributionNavItemParent.route}/${burnNavItem.route}`,
        apiPath: 'v1/distribution/burn',
        responseSchema: 'BurnAccountsDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${distributionNavItemParent.route}/${supplyNavItem.route}`,
        apiPath: 'v1/distribution/supply',
        responseSchema: 'SupplyDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${distributionNavItemParent.route}/${developerFundsNavItem.route}`,
        apiPath: 'v1/distribution/developer-funds',
        responseSchema: 'DeveloperFundsDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${distributionNavItemParent.route}/${distributionBuckets.route}`,
        apiPath: 'v1/distribution/buckets',
        responseSchema: 'AccountDistributionStatsDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${distributionNavItemParent.route}/${richListNavItem.route}`,
        apiPath: 'v1/distribution/rich-list',
        responseSchema: 'AccountBalanceDto[]',
        knobs: DISTRIBUTION_RICH_LIST_KNOBS,
        requestType: 'POST',
    },
    {
        route: `${distributionNavItemParent.route}/${richListSnapshotNavItem.route}`,
        apiPath: 'v1/distribution/rich-list-snapshot',
        responseSchema: 'AccountBalanceDto[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${networkNavItemParent.route}/${peerVersionsNavItem.route}`,
        apiPath: 'v1/network/peers',
        responseSchema: 'PeerVersionsDto[]',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${networkNavItemParent.route}/${ledgerSizeNavItem.route}`,
        apiPath: 'v1/network/ledger-size',
        responseSchema: 'LedgerSizeDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${networkNavItemParent.route}/${nodeStatsNavItem.route}`,
        apiPath: 'v1/network/node-stats',
        responseSchema: 'HostNodeStatsDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${networkNavItemParent.route}/${quorumNavItem.route}`,
        apiPath: 'v1/network/quorum',
        responseSchema: 'QuorumDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${networkNavItemParent.route}/${ncNavItem.route}`,
        apiPath: 'v1/network/nakamoto-coefficient',
        responseSchema: 'NakamotoCoefficientDto',
        knobs: [],
        requestType: 'GET',
    },
    {
        route: `${blockNavItemParent.route}/${blockNavItem.route}`,
        apiPath: 'v1/block/[hash]',
        responseSchema: 'BlockDto',
        knobs: BLOCK_KNOBS,
        requestType: 'GET',
    },
    {
        route: `${blockNavItemParent.route}/${blocksNavItem.route}`,
        apiPath: 'v1/blocks',
        responseSchema: 'BlockDto[]',
        knobs: BLOCKS_KNOBS,
        requestType: 'POST',
    },
    {
        route: `${priceNavItem.route}`,
        apiPath: 'v1/price',
        responseSchema: 'PriceDataDto',
        knobs: [],
        requestType: 'GET',
    },
];
